# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do |lane, options|
    ENV["MATCH_USERNAME"] = ENV["FASTLANE_USER"]
    ENV["PILOT_USERNAME"] = ENV["FASTLANE_USER"]
    ENV["BP_XCODE_PROJ_NAME"] = "Betterpick.xcodeproj"
    ENV["BP_FL_GIT_PREFIX"] = "[fastlane]"
  end

  ######################### TESTING #########################
  desc "Runs tests for the target that uses BetterpickAPIManagerMock"
  lane :tests_mocks do
    run_tests(
      scheme: "Betterpick Mock",
      devices: ["iPhone 11 Pro"],
    )
  end

  desc "Runs tests"
  lane :tests do
    run_tests(scheme: "Betterpick")
  end

  ######################### DOCUMENTATION #########################
  desc "Documentation generation via Jazzy"
  lane :generate_docs do
    jazzy(config: "docs/.jazzy.yaml")
  end

  ######################### TESTFLIGHT #########################
  desc "Build and upload a new build of Betterpick Mock TF to TestFlight"
  desc "This action will also bump the build number"
  lane :beta_mocks do
    sync_code_signing(
      type: "appstore"
    )
    build_app(
      scheme: "Betterpick Mock TF",
      output_directory: "build/",
      build_path: "build/"
    )
    upload_to_testflight(
      apple_id: "1514718778",
      skip_waiting_for_build_processing: true
    )
  end

  ##############################################################
  ######################### DEPLOYMENT #########################
  ##############################################################
  desc "Create and deploy a new set of screenshots."
  lane :deploy_screenshots do
    snapshot

    git_commit(
      path: "./assets/screenshots/", 
      message: ENV["BP_FL_GIT_PREFIX"] + " Add Screenshots"
    )

    push_to_git_remote
  end

  desc "Create a new Release Pull Request on GitHub."
  desc "Increments the build number and creates a new release branch from develop."
  desc "Release branch name is dependent on the app version and build number."
  lane :pr_release do
    # Make sure we're on develop branch
    ensure_git_branch(
      branch: '^develop$'
    )
    # Make sure we're free to commit new stuff
    ensure_git_status_clean
    # Bump the build number
    increment_build_number
    # Get Version and Build Number
    version = get_version_number(
      xcodeproj: ENV["BP_XCODE_PROJ_NAME"],
      target: "Betterpick"
    )

    build_number = get_build_number(
      xcodeproj: ENV["BP_XCODE_PROJ_NAME"]
    )
    # Checkout new branch
    release_branch_name = "v" + version + "b" + build_number
    sh("git checkout -b release/" + release_branch_name)
    
    git_commit(
      path: "./*", 
      message: ENV["BP_FL_GIT_PREFIX"] + " Bump App Version"
    )

    push_to_git_remote

    create_pull_request(
      api_token: ENV["GITHUB_TOKEN"],
      repo: "uzh-footm/iOS",
      title: "[Release] " + release_branch_name,
      body: "Testing automated PRs with Fastlane. ðŸš€ \n Disregard this PR."
    )
  end
end
